name: Improved CI/CD Pipeline

on:
  push:
    branches: [ main, develop, restore-export-page ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read
  security-events: write
  checks: write
  repository-projects: read
  pull-requests: read

jobs:
  # 1. 코드 품질 검사
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: false
        clean: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      working-directory: ahp_app_251014
    
    - name: Check code formatting
      run: |
        echo "Checking code formatting..."
        # TypeScript 타입 검사
        npx tsc --noEmit
      working-directory: ahp_app_251014
      continue-on-error: true
    
    - name: ESLint check
      run: |
        echo "Running ESLint..."
        npx eslint src --ext .ts,.tsx --max-warnings 500
      working-directory: ahp_app_251014
      continue-on-error: true

  # 2. 테스트 실행
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: false
        clean: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      working-directory: ahp_app_251014
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false --testTimeout=10000 --passWithNoTests
      working-directory: ahp_app_251014
      env:
        CI: true
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # 3. 빌드
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    if: always() && (needs.lint-and-format.result == 'success' || needs.lint-and-format.result == 'failure') && (needs.test.result == 'success' || needs.test.result == 'failure')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: false
        clean: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      working-directory: ahp_app_251014
    
    - name: Build application
      run: npm run build
      working-directory: ahp_app_251014
      env:
        CI: false
        PUBLIC_URL: /ahp_app
        GENERATE_SOURCEMAP: false
        REACT_APP_OPENAI_API_KEY: API_KEY_NOT_SET
    
    - name: Verify build output
      run: |
        if [ -d "build" ]; then 
          echo "✅ Build successful"
          echo "Build size:"
          du -sh build/
          echo "Main files:"
          ls -la build/static/js/ build/static/css/ 2>/dev/null || echo "Static files not found"
        else 
          echo "❌ Build failed - no build directory"
          exit 1
        fi
      working-directory: ahp_app_251014
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: ahp_app_251014/build/
        retention-days: 1

  # 4. 보안 검사
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: false
        clean: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      working-directory: ahp_app_251014
    
    - name: Run npm audit
      run: |
        echo "Running npm security audit..."
        npm audit --audit-level=high --fix || echo "⚠️ Security vulnerabilities found - continuing with fixes applied"
      working-directory: ahp_app_251014
    
    - name: Run Snyk Security Scan
      if: env.SNYK_TOKEN != ''
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --all-projects
    
    - name: Check for sensitive files
      run: |
        echo "Checking for sensitive files..."
        echo "🔍 Scanning for environment files..."
        find . -name "*.env*" -not -path "./node_modules/*" | grep -v ".env.example" || echo "✅ No problematic env files found"
        echo "🔍 Scanning for API keys..."
        grep -r "sk-" src/ 2>/dev/null || echo "✅ No obvious API keys in source code"
        echo "🔍 Security scan completed"
      working-directory: ahp_app_251014

  # 5. 성능 테스트
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    needs: build
    if: success()
    continue-on-error: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: false
        clean: true
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ahp_app_251014/build/
    
    - name: Setup Node.js for Lighthouse
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
    
    - name: Start static file server
      run: |
        cd ahp_app_251014/build
        npx serve -s . -l 8080 &
        sleep 5
    
    - name: Run Lighthouse CI
      run: |
        echo "Running Lighthouse on production build..."
        npx lhci autorun --config=./lighthouserc.js || echo "Lighthouse CI completed with warnings"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 6. 배포 (main 브랜치만)
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: https://aebonlee.github.io/ahp_app/
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: false
        clean: true
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ahp_app_251014/build/
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v4
      with:
        path: ./ahp_app_251014/build
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Deployment success notification
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "📍 Site URL: https://aebonlee.github.io/ahp_app/"
        echo "📊 Build info:"
        echo "  - Commit: ${{ github.sha }}"
        echo "  - Branch: ${{ github.ref_name }}"
        echo "  - Actor: ${{ github.actor }}"